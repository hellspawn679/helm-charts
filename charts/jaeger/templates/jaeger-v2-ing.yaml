{{- if and (.Values.jaeger.storage.memory.enabled) (.Values.jaeger.ingress.enabled) -}}
{{- $ingressSupportsIngressClassName := eq (include "common.ingress.supportsIngressClassname" .) "true" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "jaeger.query.name" . }}
  labels:
    {{- include "jaeger.labels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger-v2
  {{- if .Values.jaeger.ingress.annotations }}
  annotations:
    {{- toYaml .Values.jaeger.ingress.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if and $ingressSupportsIngressClassName .Values.jaeger.ingress.ingressClassName }}
  ingressClassName: {{ .Values.jaeger.ingress.ingressClassName }}
  {{- end }}
  rules:
    {{- range $host := .Values.jaeger.ingress.hosts }}
    - host: {{ $host }}
      http:
        paths:
          - path: /
            pathType: {{ default "ImplementationSpecific" $.Values.jaeger.ingress.pathType }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (include "jaeger.query.name" $) "servicePort" 16686 "context" $) | nindent 14 }}
  {{- end -}}
  {{- if .Values.jaeger.ingress.tls }}
  tls:
  {{- toYaml .Values.jeager.ingress.tls | nindent 4 }}
  {{- end -}}
{{- end -}}
